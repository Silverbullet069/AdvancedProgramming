#include <iostream>

using namespace std;

int Ascending(const void* a, const void* b)
{
    return ( *(int*)a - *(int*)b );
}

//Two Pointer Technique
void FindTwins(int arr[], const int& n)
{
    int i = 0;
    int j = n - 1;
    while(i < j)
    {
        if(arr[i] + arr[j] == 0)
        {
            int count_i = 1;
            int count_j = 1;
            
            while(i < j)
            {
                if(i == n - 1) 
                    break;
                else
                {
                    if(arr[i] == arr[i+1])
                        i++, count_i++;
                    else
                        break;
                }
            }
            
            while(j > i)
            {
                if(j == 0) 
                    break;
                else
                {
                    if(arr[j] == arr[j - 1])
                    {
                        j--, count_j++;
                    }
                    else 
                        break;
                }
            }
            
            for(int k = 0 ; k < count_i*count_j ; ++k)
                cout<<arr[i]<<" "<<arr[j]<<"\n";
            
            i++;
            j--;
        }
        else if(arr[i] + arr[j] > 0)
        {
            j--;
        }
        else //arr[i] + arr[j] < 0
        {
            i++;
        }
    }
}

int main()
{
    //Input
    int n; cin>>n;
    int arr[n];
    for(int i = 0 ; i < n ; ++i)
        cin>>arr[i];
    
    //Update
    qsort(arr, n, sizeof(arr[0]), Ascending);
           
    //Output 
    FindTwins(arr, n);
    return 0;
}